[
  {
    "begin": 12,
    "type": "declaration",
    "name": "http",
    "value": "require('http')",
    "string": "http",
    "original": "var http = require('http');"
  },
  {
    "begin": 21,
    "type": "function statement",
    "name": "random",
    "params": [
      "low",
      "high"
    ],
    "string": "random()",
    "original": "function random (low, high) {"
  },
  {
    "begin": 25,
    "type": "function statement",
    "name": "randomInt",
    "params": [
      "low",
      "high"
    ],
    "string": "randomInt()",
    "original": "function randomInt (low, high) {"
  },
  {
    "begin": 57,
    "type": "declaration",
    "name": "terminate",
    "value": "require('terminate')",
    "string": "terminate",
    "original": "var terminate = require('terminate');"
  },
  {
    "begin": 60,
    "type": "declaration",
    "name": "dave",
    "value": "32",
    "string": "dave",
    "original": "var dave = 32;"
  },
  {
    "begin": 85,
    "type": "function statement",
    "name": "pruneWorktree",
    "params": [],
    "string": "pruneWorktree()",
    "original": "function pruneWorktree() {"
  },
  {
    "begin": 105,
    "type": "function statement",
    "name": "project_build",
    "params": [],
    "string": "project_build()",
    "original": "function project_build() {"
  },
  {
    "begin": 136,
    "type": "function statement",
    "name": "git_add_and_commit",
    "params": [],
    "string": "git_add_and_commit()",
    "original": "function git_add_and_commit() {"
  },
  {
    "begin": 177,
    "type": "property",
    "receiver": "process",
    "name": "exitCode",
    "value": "1",
    "string": "process.exitCode",
    "original": "process.exitCode = 1; //wasn't working on Windows :-("
  },
  {
    "begin": 181,
    "type": "function statement",
    "name": "alice_command",
    "params": [
      "command",
      "arg"
    ],
    "string": "alice_command()",
    "original": "function alice_command(command, arg) {"
  },
  {
    "begin": 235,
    "type": "function statement",
    "name": "send_all_clients",
    "params": [
      "msg"
    ],
    "string": "send_all_clients()",
    "original": "function send_all_clients(msg) {"
  },
  {
    "begin": 431,
    "type": "declaration",
    "name": "gitCommand",
    "value": "(message + \":\" + \"project.cpp\")",
    "string": "gitCommand",
    "original": "var gitCommand = (message + \":\" + \"project.cpp\");"
  },
  {
    "begin": 432,
    "type": "declaration",
    "name": "gitHash",
    "value": "message.replace(\"git show \", \"\")",
    "string": "gitHash",
    "original": "var gitHash = message.replace(\"git show \", \"\")"
  },
  {
    "begin": 488,
    "type": "declaration",
    "name": "jsonstring",
    "value": "(JSON.stringify(userlist))",
    "string": "jsonstring",
    "original": "var jsonstring = (JSON.stringify(userlist))"
  },
  {
    "begin": 579,
    "type": "function statement",
    "name": "make_graph_from_gitlog",
    "params": [
      "gitlog"
    ],
    "string": "make_graph_from_gitlog()",
    "original": "function make_graph_from_gitlog(gitlog) {"
  },
  {
    "begin": 631,
    "type": "property",
    "receiver": "commit",
    "name": "root",
    "value": "true",
    "string": "commit.root",
    "original": "commit.root = true; "
  },
  {
    "begin": 671,
    "type": "property",
    "receiver": "commit",
    "name": "col",
    "value": "maxcolumn++",
    "string": "commit.col",
    "original": "commit.col = maxcolumn++;"
  },
  {
    "begin": 686,
    "type": "property",
    "receiver": "child",
    "name": "col",
    "value": "commit.col + i",
    "string": "child.col",
    "original": "child.col = commit.col + i;"
  },
  {
    "begin": 748,
    "type": "function statement",
    "name": "make_graph_from_gitlog",
    "params": [
      "gitlog"
    ],
    "string": "make_graph_from_gitlog()",
    "original": "function make_graph_from_gitlog(gitlog) {"
  },
  {
    "begin": 800,
    "type": "property",
    "receiver": "commit",
    "name": "root",
    "value": "true",
    "string": "commit.root",
    "original": "commit.root = true; "
  },
  {
    "begin": 840,
    "type": "property",
    "receiver": "commit",
    "name": "col",
    "value": "maxcolumn++",
    "string": "commit.col",
    "original": "commit.col = maxcolumn++;"
  },
  {
    "begin": 855,
    "type": "property",
    "receiver": "child",
    "name": "col",
    "value": "commit.col + i",
    "string": "child.col",
    "original": "child.col = commit.col + i;"
  },
  {
    "begin": 930,
    "type": "function statement",
    "name": "loadsim",
    "params": [],
    "string": "loadsim()",
    "original": "function loadsim() {"
  },
  {
    "begin": 936,
    "type": "function statement",
    "name": "unloadsim",
    "params": [],
    "string": "unloadsim()",
    "original": "function unloadsim() {"
  },
  {
    "begin": 990,
    "type": "function statement",
    "name": "codeForensics",
    "params": [],
    "string": "codeForensics()",
    "original": "function codeForensics(){"
  }
]